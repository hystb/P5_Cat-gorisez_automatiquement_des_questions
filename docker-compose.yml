services:
  flask_app:
    volumes:
      - ./flask_app:/flask_app
      - ./model_training/mlruns:/mlruns
    build:
      context: ./docker  
      dockerfile: flask_Dockerfile
    container_name: flask_app
    depends_on:
      mlflow:
        condition: service_healthy
    ports:
      - "5001:5001"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 2

  mlflow:
    restart: always
    build:
      context: ./docker
      dockerfile: mlflow_Dockerfile
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/data 
      - ./model_training/mlruns:/mlruns
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 2
  
  nginx:
    image: nginx:1.19
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/frontend
    depends_on:
      flask_app:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    networks:
      - my_network

networks:
  my_network:
    driver: bridge


